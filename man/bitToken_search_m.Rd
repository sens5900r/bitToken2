% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bitToken_search_m.R
\name{bitToken_search_m}
\alias{bitToken_search_m}
\title{Token Search (Multicore)}
\usage{
bitToken_search_m(
  data,
  text_column,
  pattern,
  location = NULL,
  use_p = TRUE,
  num_cores = parallel::detectCores()
)
}
\arguments{
\item{data}{A data frame containing the text data.}

\item{text_column}{A string specifying the name of the text column in the input data.}

\item{pattern}{A character string representing the specific character or string to filter.
Note the following when using the pattern argument:
- Case sensitivity: By default, the function is case sensitive. Use (?i) within the pattern to make it case insensitive.
- Regular expressions: The function uses regular expressions, so escape special characters (e.g., . or *) with a backslash (\\).
- Spaces and whitespace: Include the exact whitespace character in the pattern, such as regular spaces or tabs, or use \\s to represent any whitespace.}

\item{location}{A numeric value indicating the position of tokens to consider when filtering. Default is NULL, indicating all tokens are considered.}

\item{use_p}{A logical value. If \code{FALSE}, the function will not use the 'use_p' argument in its calculations. Default is \code{TRUE}.}

\item{num_cores}{The number of cores to use for parallel processing.
By default, it is set to the number of available cores detected by \code{parallel::detectCores()}.
However, the number of cores used is limited to half of the total available cores.}
}
\value{
A character vector with the filtered values from the specified text column.
}
\description{
Filter rows based on the occurrence of a specific character or string at a specific location in the specified text column in a data frame.
This function leverages multiple cores for parallel execution.
}
\examples{
# Search for 'COVID' at second position in titles using multiple cores
titles_with_COVID <- bitToken_search_m(chatGPT_news1, "title", "COVID", location=2, num_cores = 2)
}
