% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bitToken_count_m.R
\name{bitToken_count_m}
\alias{bitToken_count_m}
\title{Token Count (Multicore)}
\usage{
bitToken_count_m(
  data,
  text_column,
  pattern,
  location = NULL,
  sum_info = FALSE,
  num_cores = parallel::detectCores()
)
}
\arguments{
\item{data}{A data frame containing the text data.}

\item{text_column}{A string specifying the name of the text column in the input data.}

\item{pattern}{A character string representing the specific character or string to filter.
Note the following when using the pattern argument:
- Case sensitivity: By default, the function is case sensitive. Use (?i) within the pattern to make it case insensitive.
- Regular expressions: The function uses regular expressions, so escape special characters (e.g., . or *) with a backslash (\\).
- Spaces and whitespace: Include the exact whitespace character in the pattern, such as regular spaces or tabs, or use \\s to represent any whitespace.}

\item{location}{A numeric value indicating the position of tokens to consider when counting. If specified,
the function checks whether the pattern appears at the given token position in each row. Default is NULL,
indicating all tokens are considered.}

\item{sum_info}{A boolean flag indicating whether to return summary information and frequency table for counts. Default is FALSE.}

\item{num_cores}{The number of cores to be used for parallel processing. The default is the half of the total number of cores available in the system.}
}
\value{
A character vector with the filtered values from the specified text column.
}
\description{
Count the occurrences of a specific character or string in each row of the specified text column in a data frame.
}
\examples{
data(chatGPT_news1, package="bitToken2")
chatGPT_news1$comma_count <- bitToken_count_m(chatGPT_news1, "title", pattern = ",", num_cores = 2)

}
